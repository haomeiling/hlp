
package cn.bxd.sip.his.webservice.hisws.invoke;

import cn.bxd.sip.his.comm.HisConvertConst;
import cn.bxd.sip.his.webservice.hisws.invoke2.Service;

import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceException;
import javax.xml.ws.WebServiceFeature;
import java.net.MalformedURLException;
import java.net.URL;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebServiceClient(name = "HISInterface_qkb", targetNamespace = "http://tempuri.org/")
public class HISInterfaceQkb
    extends Service
{

    private final static URL HISINTERFACEQKB_WSDL_LOCATION;
    private final static WebServiceException HISINTERFACEQKB_EXCEPTION;
    private final static QName HISINTERFACEQKB_QNAME = new QName("http://tempuri.org/", "HISInterface_qkb");

    static {
        URL url = null;
        WebServiceException e = null;
        try {
            url = new URL(HisConvertConst.hisWSUrl);
//            url = new URL("http://wz.his.gxhealth.xin/HISInterface_qkb.asmx?WSDL");
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        HISINTERFACEQKB_WSDL_LOCATION = url;
        HISINTERFACEQKB_EXCEPTION = e;
    }

    public HISInterfaceQkb() {
        super(__getWsdlLocation(), HISINTERFACEQKB_QNAME);
    }

    public HISInterfaceQkb(WebServiceFeature... features) {
        super(__getWsdlLocation(), HISINTERFACEQKB_QNAME, features);
    }

    public HISInterfaceQkb(URL wsdlLocation) {
        super(wsdlLocation, HISINTERFACEQKB_QNAME);
    }

    public HISInterfaceQkb(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, HISINTERFACEQKB_QNAME, features);
    }

    public HISInterfaceQkb(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public HISInterfaceQkb(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return
     *     returns HISInterfaceQkbSoap
     */
    @WebEndpoint(name = "HISInterface_qkbSoap")
    public HISInterfaceQkbSoap getHISInterfaceQkbSoap() {
        return super.getPort(new QName("http://tempuri.org/", "HISInterface_qkbSoap"), HISInterfaceQkbSoap.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns HISInterfaceQkbSoap
     */
    @WebEndpoint(name = "HISInterface_qkbSoap")
    public HISInterfaceQkbSoap getHISInterfaceQkbSoap(WebServiceFeature... features) {
        return super.getPort(new QName("http://tempuri.org/", "HISInterface_qkbSoap"), HISInterfaceQkbSoap.class, features);
    }

    private static URL __getWsdlLocation() {
        if (HISINTERFACEQKB_EXCEPTION!= null) {
            throw HISINTERFACEQKB_EXCEPTION;
        }
        return HISINTERFACEQKB_WSDL_LOCATION;
    }

}

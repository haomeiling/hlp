
package cn.bxd.sip.bxd.webservice.client.msgws;

import cn.bxd.sip.bxd.var.SIVar;
import org.springframework.beans.factory.annotation.Value;

import javax.xml.namespace.QName;
import javax.xml.ws.*;
import java.net.MalformedURLException;
import java.net.URL;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.4-b01
 * Generated source version: 2.2
 * 
 */

@WebServiceClient(name = "MessageCenterWebserviceService", targetNamespace = "http://webservice.messagecenter.efc.com/", wsdlLocation = "http://172.16.11.36:8082/service/messagecenterwebservice?wsdl")
public class MessageCenterWebserviceService_Service
    extends Service
{

   /* @Autowired
    private MessageCenterConfig messageCenterConfig;*/
   @Value("${messagecenter.messagecenterUrl}")
   private static String messagecenterUrl;

    private final static URL MESSAGECENTERWEBSERVICESERVICE_WSDL_LOCATION;
    private final static WebServiceException MESSAGECENTERWEBSERVICESERVICE_EXCEPTION;
    private final static QName MESSAGECENTERWEBSERVICESERVICE_QNAME = new QName("http://webservice.messagecenter.efc.com/", "MessageCenterWebserviceService");
    private static MessageCenterWebserviceService_Service messageCenterWebserviceService_service = null;

     static {
        URL url = null;
        WebServiceException e = null;
        try {
            url = new URL(SIVar.WS.MESSAGE_CENTER_URL);
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        MESSAGECENTERWEBSERVICESERVICE_WSDL_LOCATION = url;
        MESSAGECENTERWEBSERVICESERVICE_EXCEPTION = e;
    }

  /*  public void getHisUser() {
        URL url = null;
        try {
            url = new URL(messageCenterConfig.getUrl());

        } catch (Exception e) {
            log.error("",e);
        }
        MESSAGECENTERWEBSERVICESERVICE_WSDL_LOCATION = url;

    }*/

    /**
     * 单例
     * @Author  Lisheng
     */
    public static MessageCenterWebserviceService_Service getInstance() {
        if (messageCenterWebserviceService_service == null) {
            messageCenterWebserviceService_service = new MessageCenterWebserviceService_Service();
        }
        return messageCenterWebserviceService_service;
    }

    public MessageCenterWebserviceService_Service() {
        super(__getWsdlLocation(), MESSAGECENTERWEBSERVICESERVICE_QNAME);
    }

    public MessageCenterWebserviceService_Service(WebServiceFeature... features) {
        super(__getWsdlLocation(), MESSAGECENTERWEBSERVICESERVICE_QNAME, features);
    }

    public MessageCenterWebserviceService_Service(URL wsdlLocation) {
        super(wsdlLocation, MESSAGECENTERWEBSERVICESERVICE_QNAME);
    }

    public MessageCenterWebserviceService_Service(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, MESSAGECENTERWEBSERVICESERVICE_QNAME, features);
    }

    public MessageCenterWebserviceService_Service(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public MessageCenterWebserviceService_Service(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return
     *     returns MessageCenterWebserviceService
     */
    @WebEndpoint(name = "MessageCenterWebserviceServicePort")
    public MessageCenterWebserviceService getMessageCenterWebserviceServicePort() {
        return super.getPort(new QName("http://webservice.messagecenter.efc.com/", "MessageCenterWebserviceServicePort"), MessageCenterWebserviceService.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns MessageCenterWebserviceService
     */
    @WebEndpoint(name = "MessageCenterWebserviceServicePort")
    public MessageCenterWebserviceService getMessageCenterWebserviceServicePort(WebServiceFeature... features) {
        return super.getPort(new QName("http://webservice.messagecenter.efc.com/", "MessageCenterWebserviceServicePort"), MessageCenterWebserviceService.class, features);
    }

    private static URL __getWsdlLocation() {
        if (MESSAGECENTERWEBSERVICESERVICE_EXCEPTION!= null) {
            throw MESSAGECENTERWEBSERVICESERVICE_EXCEPTION;
        }
        return MESSAGECENTERWEBSERVICESERVICE_WSDL_LOCATION;
    }

}

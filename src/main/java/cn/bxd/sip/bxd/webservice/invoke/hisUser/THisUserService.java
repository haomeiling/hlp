
package cn.bxd.sip.bxd.webservice.invoke.hisUser;

import cn.bxd.sip.bxd.config.YmlTerminalConfig;

import javax.xml.namespace.QName;
import javax.xml.ws.*;
import java.net.MalformedURLException;
import java.net.URL;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.4-b01
 * Generated source version: 2.2
 * 
 */
@WebServiceClient(name = "THisUserService", targetNamespace = "http://webservice.bxd.sip.bxd.cn/", wsdlLocation = "http://172.16.100.53:7777/sip/services/HisUser?wsdl")
public class THisUserService
    extends Service
{

    private final static URL HISUSERSERVICE_WSDL_LOCATION;
    private final static WebServiceException HISUSERSERVICE_EXCEPTION;
    private final static QName HISUSERSERVICE_QNAME = new QName("http://webservice.bxd.sip.bxd.cn/", "HisUserService");
    private static THisUserService tHisUserService = null;

    static {
        URL url = null;
        WebServiceException e = null;
        YmlTerminalConfig ymlTerminalConfig = new YmlTerminalConfig();
        String hisUserUrl = ymlTerminalConfig.getHisUserUrl();
        try {
            url = new URL(hisUserUrl);
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        HISUSERSERVICE_WSDL_LOCATION = url;
        HISUSERSERVICE_EXCEPTION = e;
    }

    /**
     * 单例
     * @Author  Lisheng
     */
    public static THisUserService getInstance() {
        if (tHisUserService == null) {
            tHisUserService = new THisUserService();
        }
        return tHisUserService;
    }



    public THisUserService() {
        super(__getWsdlLocation(), HISUSERSERVICE_QNAME);
    }

    public THisUserService(WebServiceFeature... features) {
        super(__getWsdlLocation(), HISUSERSERVICE_QNAME, features);
    }

    public THisUserService(URL wsdlLocation) {
        super(wsdlLocation, HISUSERSERVICE_QNAME);
    }

    public THisUserService(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, HISUSERSERVICE_QNAME, features);
    }

    public THisUserService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public THisUserService(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return
     *     returns TIHisUser
     */
    @WebEndpoint(name = "HisUserPort")
    public TIHisUser getHisUserPort() {
        return super.getPort(new QName("http://webservice.bxd.sip.bxd.cn/", "HisUserPort"), TIHisUser.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns TIHisUser
     */
    @WebEndpoint(name = "HisUserPort")
    public TIHisUser getHisUserPort(WebServiceFeature... features) {
        return super.getPort(new QName("http://webservice.bxd.sip.bxd.cn/", "HisUserPort"), TIHisUser.class, features);
    }

    private static URL __getWsdlLocation() {
        if (HISUSERSERVICE_EXCEPTION!= null) {
            throw HISUSERSERVICE_EXCEPTION;
        }
        return HISUSERSERVICE_WSDL_LOCATION;
    }

}


package cn.bxd.sip.his.webservice.hisws.invoke3.reg;

import javax.xml.namespace.QName;
import javax.xml.ws.*;
import java.net.MalformedURLException;
import java.net.URL;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.4-b01
 * Generated source version: 2.2
 * 
 */
@WebServiceClient(name = "Reg", targetNamespace = "http://tempuri.org/", wsdlLocation = "file:/E:/project/sip/src/main/resources/schema/1238_Reg.wsdl")
public class Reg
    extends Service
{

    private final static URL REG_WSDL_LOCATION;
    private final static WebServiceException REG_EXCEPTION;
    private final static QName REG_QNAME = new QName("http://tempuri.org/", "Reg");

    static {
        URL url = null;
        WebServiceException e = null;
        try {
            url = new URL("file:/E:/project/sip/src/main/resources/schema/1238_Reg.wsdl");
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        REG_WSDL_LOCATION = url;
        REG_EXCEPTION = e;
    }

    public Reg() {
        super(__getWsdlLocation(), REG_QNAME);
    }

    public Reg(WebServiceFeature... features) {
        super(__getWsdlLocation(), REG_QNAME, features);
    }

    public Reg(URL wsdlLocation) {
        super(wsdlLocation, REG_QNAME);
    }

    public Reg(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, REG_QNAME, features);
    }

    public Reg(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public Reg(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return
     *     returns RegSoap
     */
    @WebEndpoint(name = "RegSoap")
    public RegSoap getRegSoap() {
        return super.getPort(new QName("http://tempuri.org/", "RegSoap"), RegSoap.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns RegSoap
     */
    @WebEndpoint(name = "RegSoap")
    public RegSoap getRegSoap(WebServiceFeature... features) {
        return super.getPort(new QName("http://tempuri.org/", "RegSoap"), RegSoap.class, features);
    }

    private static URL __getWsdlLocation() {
        if (REG_EXCEPTION!= null) {
            throw REG_EXCEPTION;
        }
        return REG_WSDL_LOCATION;
    }

}

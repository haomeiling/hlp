
package cn.bxd.sip.his.webservice.hisws.invoke3.hiscom;

import javax.xml.namespace.QName;
import javax.xml.ws.*;
import java.net.MalformedURLException;
import java.net.URL;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.4-b01
 * Generated source version: 2.2
 * 
 */
@WebServiceClient(name = "HisCom", targetNamespace = "http://tempuri.org/", wsdlLocation = "file:/E:/project/sip/src/main/resources/schema/1238_HisCom.wsdl")
public class HisCom
    extends Service
{

    private final static URL HISCOM_WSDL_LOCATION;
    private final static WebServiceException HISCOM_EXCEPTION;
    private final static QName HISCOM_QNAME = new QName("http://tempuri.org/", "HisCom");

    static {
        URL url = null;
        WebServiceException e = null;
        try {
            url = new URL("file:/E:/project/sip/src/main/resources/schema/1238_HisCom.wsdl");
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        HISCOM_WSDL_LOCATION = url;
        HISCOM_EXCEPTION = e;
    }

    public HisCom() {
        super(__getWsdlLocation(), HISCOM_QNAME);
    }

    public HisCom(WebServiceFeature... features) {
        super(__getWsdlLocation(), HISCOM_QNAME, features);
    }

    public HisCom(URL wsdlLocation) {
        super(wsdlLocation, HISCOM_QNAME);
    }

    public HisCom(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, HISCOM_QNAME, features);
    }

    public HisCom(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public HisCom(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return
     *     returns HisComSoap
     */
    @WebEndpoint(name = "HisComSoap")
    public HisComSoap getHisComSoap() {
        return super.getPort(new QName("http://tempuri.org/", "HisComSoap"), HisComSoap.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns HisComSoap
     */
    @WebEndpoint(name = "HisComSoap")
    public HisComSoap getHisComSoap(WebServiceFeature... features) {
        return super.getPort(new QName("http://tempuri.org/", "HisComSoap"), HisComSoap.class, features);
    }

    private static URL __getWsdlLocation() {
        if (HISCOM_EXCEPTION!= null) {
            throw HISCOM_EXCEPTION;
        }
        return HISCOM_WSDL_LOCATION;
    }

}
